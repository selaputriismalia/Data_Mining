# -*- coding: utf-8 -*-
"""Data_Understanding.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18g3uPOxNhjSoS6IIQ_oap4H1IMxguE0Z

#**Anime Rating Analysis & Recommender System**
"""

import pandas as pd
import matplotlib.pyplot as plt
# import plotly as pd
import numpy as np
import seaborn as sns
from pprint import pprint
from tabulate import tabulate

"""#**Business Understanding**
##**Tujuan Bisnis**
Tujuan proyek ini adalah untuk menganalisis data rating anime dan mengembangkan sistem rekomendasi untuk memberikan rekomendasi yang baik untuk pengguna berdasarkan kesukaan mereka. Dengan demikian, diharapkan dapat meningkatkan pengalaman pengguna dalam menemukan anime yang sesuai dengan selera mereka.


##**Assess Situation**
Situasi bisnis yang mendasari proyek ini adalah:

1. Kebutuhan akan sistem yang dapat membantu memberikan rekomendasi yang sesuai dengan selera mereka
2. Meningkatkan interaksi pengguna dengan platform anime.
3. Kurangnya pemahaman selera unik setiap pengguna, maka terdapat keaadan yang dimana rekomendasinya kurang tepat


##**Data Mining Goals**
Tujuan dari analisis data pada dataset ini adalah :


1. Mengembangkan sistem rekomendasi yang dapat memberikan rekomendasi anime yang sesuai dengan selera pengguna.
2.   Memprediksi rating anime berdasarkan faktor-faktor tertentu
3. mengidentifikasi tren dan pola dalam data rating


##**Projek Plan**
Pertama-tama dimulai dengan pengumpulan data rating anime dari sumber yang tersedia. Selanjutnya, data akan dijelaskan karakteristiknya dan pola-pola yang menarik untuk di itentifikasi. kemudian mendeskripsikan data yang akan di identifikasi seperti contoh "ID anime, nama, genre, jenis, episode, rating", lalu menilai kualitas data dan masalah data yang akan diidentifikasi.

#**Data Understanding**

##**Collect Initial Data**
"""

Data_URL = 'https://raw.githubusercontent.com/selaputriismalia/Data_Mining/main/anime.csv'

data = pd.read_csv(Data_URL, on_bad_lines='skip')

data = pd.read_csv("anime.csv")

data.head()

"""##**Describe Data**

###Informasi Dasar
"""

print("Baris :",data.shape[0])
print("Kolom :",data.shape[1])

"""Pada Dataset yang tersedia total Baris adalah 12294 dengan total kolom 7

###informasi Lanjut
"""

data.info()

"""pada index 0 terdapat kolom "anime_id" Kolom ini berisi ID unik untuk setiap anime dalam dataset. Jumlahnya 12294 dan memiliki tipe data int64.

pada index 1 terdapat kolom "nama" Kolom ini berisi nama anime. Setiap entri adalah string (objek) dan tidak ada nilai yang hilang (non-null) di kolom ini.

pada index 2 terdapat kolom "genre" Kolom ini berisi genre-genre dari setiap anime. Ada 12232 entri non-null dalam kolom ini. Tipe data kolom ini adalah objek (string).

pada index 3 terdapat kolom "type" Kolom ini mewakili jenis dari anime, seperti TV, OVA, Movie, dll. Ada 12269 entri non-null dalam kolom ini. Tipe datanya adalah objek (string).

pada index 4 terdapat kolom "episodes" Kolom ini berisi informasi tentang jumlah episode dari setiap anime. Semua entri adalah string. Jumlah total entri sesuai dengan jumlah baris dalam dataset (12294).

pada index 5 terdapat kolom "rating" Kolom ini berisi rating dari setiap anime. Ada 12064 entri non-null dalam kolom ini. Tipe data kolom ini adalah float64.

pada index 6 terdapat kolom "members" Kolom ini berisi jumlah anggota yang telah memberikan peringkat terhadap anime tersebut. Semua entri adalah bilangan bulat (int64)

Jadi, dataset ini berisi informasi tentang anime, termasuk ID, nama, genre, jenis, jumlah episode, rating, dan jumlah anggota yang memberikan peringkat. Beberapa kolom memiliki (missing values), seperti genre, type, dan rating

###Informasi Statistik Deskriptif
"""

data.describe()

"""pada kolom output "index" diatas merupakan perhitungan yang meliputi, count,mean,sdt,min,25%,50%,75%, dan Max

pada kolom output "anime_id" Kolom ini berisi ID unik untuk setiap anime dalam dataset. Jumlah entri dalam kolom ini adalah 12294.0, Rata-rata entri dalam kolom ini adalah 14058.221652838783,Nilai minimumnya adalah 1.0 dan nilai maksimumnya adalah 34527.0  Standar deviasi dari kolom ini adalah 11455.29, menunjukkan sebaran yang cukup besar dari nilai-nilai anime_id. Nilai-nilai ini juga menunjukkan bahwa data anime_id tidak diurutkan secara berurutan.

rating: Kolom ini berisi rating untuk setiap anime. Jumlah entri yang tidak null dalam kolom ini adalah 12064. Nilai rata-ratanya adalah 6.47 dengan standar deviasi sekitar 1.03, menunjukkan variasi yang cukup rendah di antara nilai-nilai rating. Rating terendah adalah 1.67 dan rating tertinggi adalah 10.0.

members: Kolom ini berisi jumlah anggota yang memberikan peringkat terhadap anime tersebut. Jumlah entri dalam kolom ini adalah 12294. Jumlah anggota terendah yang memberikan peringkat adalah 5 dan jumlah anggota tertinggi yang memberikan peringkat adalah 1013917. Standar deviasi dari kolom ini adalah 54820.68, menunjukkan sebaran yang cukup besar dari jumlah anggota yang memberikan peringkat.

##**Exploratoory Data Analysis**

###Distribusi Variabel Tunggal
"""

plt.figure(figsize=(10, 6))
sns.histplot(data['rating'], bins=30, kde=True, color='blue')
plt.title('Distribusi Rating Anime')
plt.xlabel('Rating')
plt.ylabel('Frekuensi')
plt.show()

"""####Histogram Distribusi Rating Anime:


Penjelasan: Histogram menunjukkan distribusi rating anime dalam dataset. yang dimana frekuensi dimulai dari 0-1400 dan rating dimulai dari 0-10


####**Interpretasi:**

*   Distribusi rating anime pada dataset ini tidak normal, dengan kemiringan ke kiri yang menunjukkan bahwa mayoritas anime memiliki rating yang lebih rendah.
*   Puncak distribusi berada di sekitar rating 6-7, menunjukkan bahwa banyak anime yang memiliki kualitas rata-rata.
* Ada beberapa anime yang memiliki rating sangat tinggi (9-10) dan juga sangat rendah (1-2).

*   Distribusi rating anime pada dataset ini menunjukkan bahwa Penonton anime memiliki selera yang beragam, dengan preferensi yang berbeda terhadap genre, gaya animasi, dan cerita.
* ada banyak anime yang memiliki kualitas yang kurang baik bagi beberapa preferensi tertentu
*   Ada banyak juga anime yang memiliki kualitas yang baik dan menarik bagi berbagai kalangan
* Rating anime tidak selalu mencerminkan kualitasnya, sehingga penting untuk melihat faktor lain seperti genre, cerita, dan karakter

###Hubungan Antar Dua Variabel
"""

plt.figure(figsize=(10, 6))
sns.regplot(x='rating', y='members', data=data, scatter_kws={'alpha':0.5}, line_kws={'color':'red'})
plt.title('Hubungan antara Rating dan Jumlah Anggota')
plt.xlabel('Rating')
plt.ylabel('Jumlah Anggota')
plt.grid(True)
plt.show()

"""###Scatter plot untuk melihat hubungan antara rating dan jumlah anggota

####**Interpretasi**


* Rating dan jumlah anggota saling terkait. Anime dengan rating tinggi cenderung memiliki lebih banyak anggota, dan komunitas anime dengan banyak anggota cenderung memiliki rating tinggi.
* Rating dapat menjadi indikator popularitas dan kualitas anime, dan komunitas anime yang aktif dan memiliki banyak konten menarik dapat menarik lebih banyak anggota.
* Anime dengan rating tinggi lebih populer dan menarik minat lebih banyak orang untuk bergabung dengan komunitasnya.
* Rating tinggi dapat menjadi indikator kualitas anime, sehingga orang lebih tertarik untuk menonton dan bergabung dengan komunitasnya.
* Komunitas anime dengan rating tinggi biasanya lebih aktif dan memiliki lebih banyak konten menarik, sehingga menarik lebih banyak anggota.

###Komposisi Variabel
"""

plt.figure(figsize=(8, 8))
data['type'].value_counts().plot(kind='pie', autopct='%1.1f%%')
plt.title('Komposisi Jenis Anime')
plt.ylabel('')
plt.show()

"""###Pie chart untuk melihat komposisi jenis anime

####**Interpretasi**



*   TV: 30.9%
*   OVA: 27.0%
* Movie:
* ONA: 13.7%
* Music: 4.0%
* Special: 5.4%
* Terdapat berbagai jenis anime yang tersedia, dengan anime TV sebagai format yang paling populer.
* Setiap jenis anime memiliki karakteristik dan target penontonnya sendiri.
* Penonton anime dapat memilih jenis anime yang sesuai dengan selera mereka.

###Perbandingan Antar Kategori yang Berbeda
"""

plt.figure(figsize=(10, 6))
sns.barplot(x='type', y='rating', data=data, hue='type', palette='Set2', ci=None, dodge=False)
plt.title('Perbandingan Rating Berdasarkan Jenis Anime')
plt.xlabel('Jenis Anime')
plt.ylabel('Rating Rata-Rata')
plt.xticks(rotation=45)
plt.legend([], frameon=False)
plt.grid(axis='y')
plt.tight_layout()
plt.show()

"""###Barchart untuk melihat perbandingan rating berdasarkan jenis anime

####**Interpretasi**


*   TV memiliki rating rata-rata tertinggi yaitu (6.8)
*   Movie dan OVA meiliki rata-rata yang sama yaitu (6.4)
* Music dan ONA memiliki rata-rata yang sama yaitu (5.6)

##**Verify Data Quality**

###Missing Values
"""

for col in data.columns:
  print(f"Kolom {col}: {data[col].isnull().sum()} nilai kosong")

"""* pada output dataset diatas memiliki beberapa kolom yang nilai nya kosong, diantaranya genre sebanyak 65, type sebanyak 25, dan rating sebanyak 230
*Rating merupakan kolom terbanyak yang nilainya kosong

###Outliers Values
"""

data['episodes'] = pd.to_numeric(data['episodes'], errors='coerce')

cols = ['anime_id', 'rating', 'members']

outliers_percentage = []

for col in cols:
    if pd.api.types.is_numeric_dtype(data[col]):
        q1, q3 = data[col].quantile(0.25), data[col].quantile(0.75)
        iqr = q3 - q1
        outlier_percentage = ((data[col] < (q1 - 1.5 * iqr)) | (data[col] > (q3 + 1.5 * iqr))).mean() * 100
        outliers_percentage.append(outlier_percentage)
    else:
        outliers_percentage.append('N/A')
results_df = pd.DataFrame({
    'Columns': cols,
    'Outliers Percentage': outliers_percentage
}).set_index('Columns')

print(results_df)

"""outliers pada kolom anime_id, rating dan members



*   anime_id: Tidak ada outlier dalam kolom ini, yang berarti tidak ada nilai di luar rentang yang dianggap abnormal atau tidak wajar.
*   rating: Terdapat 1.86% outlier dalam kolom rating. Ini mengindikasikan bahwa sebagian kecil nilai dalam kolom rating berada di luar jangkauan nilai yang umum.
* members: Sekitar 15.45% data dalam kolom members dianggap outlier. Ini menunjukkan bahwa sejumlah besar entri memiliki jumlah anggota yang signifikan,

###Duplicated Values
"""

for col in data.columns:
    duplicated_values = data[col][data[col].duplicated()]
    if duplicated_values.empty:
        print(f'Tidak ada nilai duplikat dalam kolom {col}')
    else:
        print(f'Nilai duplikat dalam kolom {col}:')
        print(duplicated_values)

"""###**Duplikasi antar kolom**
pada output diatas mengecek perkolom apakah terdapat kolom yang memiliki duplikasi. kolom yang memiliki duplikasi diantara nya "name, genre, type, episode, rating, members" hanya ada satu kolom yang tidak memili duplikat yaitu kolom "anime_id"
"""

total_duplicates = f"Jumlah total duplikasi: {data.duplicated().sum()}"
total_duplicates

"""###**Duplikasi keseluruhan DataFrame**

pada ouput diatas mengecek keseluruh dataframe apakah memiliki nilai duplikasi dan hasilnya tidak ada nilai duplikasi.

###Inconsistent Values / Noise
"""

print("Tipe data kolom:")
print(data.dtypes)

[print(f"Columns -> {col}\n{data[col].unique()}\n\n{'-' * 30}") for col in data.columns]

"""Nilai unik pada kolom



*    anime_id: Berisi ID unik untuk setiap anime dalam dataset.
*   name: Berisi nama-nama anime yang berbeda dalam dataset.
* genre: Berisi genre-genre anime yang ada. Beberapa anime dapat memiliki beberapa genre yang dipisahkan oleh koma.
* type: Menunjukkan jenis anime, seperti Movie, TV series, OVA, Special, Music, atau ONA. Terdapat juga nilai "nan"
* episodes: Menunjukkan jumlah episode untuk setiap anime. Terdapat juga nilai 'Unknown'.
* rating: Menunjukkan rating untuk setiap anime. Rating berkisar dari 1 hingga 10.
*  members: Menunjukkan jumlah anggota yang memasukkan anime ke dalam daftar mereka.




"""